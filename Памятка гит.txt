cd путь - выбор директории, где работает гитбаш
git init - инициализация репозитория
git clone -клонирование удаленного репозитория к себе
git push - отправка изменения в удаленный 
git pull  - из удаленного в свой изменения
git status - стостояние локального репозитория и и его стостояние относительно удаленного р
git add . - добавить изменеенниые файлы в хеш комита
git commit -m(это указатель ветки) комментарий  -создание комита
git commit -a  - совмещенное add и commit
git log  - показывает неотправленные комиты
:wq - выход из редактора комментария коммита без его изменения
:q  - выход со сбросом сообщения коммита до дефолтного
git remote add - подключение локальнгого к удаленному

git rm --cached filname - удалить файл из отслеживания git

git diff failename -просмотр изменений  в файле. Если не указать filname - вывдет изменения во всех файлах
git diff индекскоммита1 индекскоммита2 filename - просмотр разницы между коммитами.Сперва ранний, потом поздний индекс коммита - длинное число с буквами , посмотреть можно в git log
git blame filename - информация о том, кто работал с файлом и что делал

git config --global alias.ci commit - пример создания псевдонима-. теперь вместо git commit можно писать git ci

git checkout -b название ветки - создание новой ветки и переклюбчение на неё. -b означает что она новая(по сути делает git branch).
git branch название- тоже зодание новой ветки
  git push -u origin branch-name - когда ветка только создана в ЛР, эта команда отправвляет её в УР
git branch --all - список веток
git branch -d  имя - удаление ветки с ЛР.
 git push -d <имя_удаленного_репозитория> <ветка> - уделание её с УР
git branch --move bad-branch-name corrected-branch-name - переименование ветки на ЛР.
 git push --set-upstream origin corrected-branch-name - отправкаи изменений в УР
git branch -а - просмотреть все ветки, в локальном и удаленном
git checkout название ветки - переключение между ветками

git stash - откладывает внесенные изменения в буфер. Стеш не зависит от ветки: можно записать в одной, перейти в другую и развернуть в ней
git stash pop - возвращает отложенные изменения. первым возвращается последний и так попорядку
git stash list - показывает буфер
git stash drop N(номер стеша) - удаление стеша

git merge branch-name1 - вливает ветку branch-name1 в текущую ( в которй находимсся)

git restore filename - удаляет внесенные изменения
git restore --staged filename - удалить изменения из индекса ( из add)
git clean -f  - удаляет все НЕ ОТСЛЕЖИВАЕМЫЕ и незакомиечнные изменения
git revert --no-commit commitindex - удаление коммита
git chekout indexcommit filename  возвращает в рабочую директорию версию из коммита